@model  List<eciWEB2016.Models.TimeHeaderModel>
<div id="gridContent" style="font-family: Arial; padding: 10px;"> 
    @{
        var grid = new WebGrid(ajaxUpdateContainerId: "gridContent");

        if (Model != null && Model.Count > 0)
        {
            grid = new WebGrid(source: Model, rowsPerPage: 10, ajaxUpdateContainerId: "gridContent", defaultSort: "staffID");
            //grid.Pager(WebGridPagerModes.All);
        }
        else
        {
            List<eciWEB2016.Models.TimeHeaderModel> headerList = new List<eciWEB2016.Models.TimeHeaderModel>();
            grid = new WebGrid(source: headerList, rowsPerPage: 10, ajaxUpdateContainerId: "gridContent", defaultSort: "staffID");
            @:No Data to display
        }

    } 
    <style>
    #outerGrid, #outerGrid tr {
    border: 1px solid #0D857B;
    }

    #innerGrid, #innerGrid tr {
    border: 1px solid #f3f3f3;
    }

    #innerGrid {
    margin: 0px 0px 0px 10px;
    padding: 5px;
    width: 95%;
    }

    #innerGrid th {
    font-size: 12px;
    }

    .hoverEff {
    cursor: pointer;
    }

    .hoverEff:hover {
    background-color: rgb(248, 242, 242);
    }

    .expand {
    background-image: url(/Images/pm.png);
    background-position-x: -22px;
    background-repeat: no-repeat;
    }

        .collapse {
            background-image: url(/Images/pm.png);
            background-position-x: -2px;
            background-repeat: no-repeat;
        }
        </style>

    @grid.GetHtml(tableStyle: "gTable",
    headerStyle: "webgrid-header",
    footerStyle: "webgrid-footer",
    alternatingRowStyle: "webgrid-alternating-row",
    selectedRowStyle: "webgrid-selected-row",
    rowStyle: "webgrid-row-style",
    htmlAttributes: new { id = "outerGrid" },
    columns: grid.Columns(
    grid.Column(columnName: "staffID", header: "Staff Alt ID"),
    grid.Column(columnName: "weekEnding", header: "Week Ending"),
    grid.Column(columnName: null, format: @<input type="hidden" id="hiddenHeaderID" value="@item.timeHeaderID"/>),
    grid.Column("Sheet Details", format: (item) =>
    {
        var secondaryGrid = new WebGrid(source: item.timeDetails);

        return secondaryGrid.GetHtml(
               tableStyle: "innerGrid",
                htmlAttributes: new { id = "innerGrid" },
                columns: new[] {
                    secondaryGrid.Column(columnName: "actualTime", header: "Actual Time"),
                    secondaryGrid.Column(columnName: "insuranceTime", header: "Insurance Time"),
                    secondaryGrid.Column(columnName: "placeOfService", header: "Place of Service"),
                    secondaryGrid.Column(columnName: "canceled", header: "Canceled")
    });
    }
    )))
</div>